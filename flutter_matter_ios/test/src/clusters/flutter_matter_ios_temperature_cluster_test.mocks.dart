// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_matter_ios/test/src/clusters/flutter_matter_ios_temperature_cluster_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_matter_ios/src/flutter_matter.g.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FlutterMatterHostTemperatureClusterApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterMatterHostTemperatureClusterApi extends _i1.Mock
    implements _i2.FlutterMatterHostTemperatureClusterApi {
  @override
  _i3.Future<int?> readMeasuredValue(
    int? arg_deviceId,
    int? arg_endpointId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #readMeasuredValue,
          [
            arg_deviceId,
            arg_endpointId,
          ],
        ),
        returnValue: _i3.Future<int?>.value(),
        returnValueForMissingStub: _i3.Future<int?>.value(),
      ) as _i3.Future<int?>);
  @override
  _i3.Future<int?> readMinMeasuredValue(
    int? arg_deviceId,
    int? arg_endpointId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #readMinMeasuredValue,
          [
            arg_deviceId,
            arg_endpointId,
          ],
        ),
        returnValue: _i3.Future<int?>.value(),
        returnValueForMissingStub: _i3.Future<int?>.value(),
      ) as _i3.Future<int?>);
  @override
  _i3.Future<int?> readMaxMeasuredValue(
    int? arg_deviceId,
    int? arg_endpointId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #readMaxMeasuredValue,
          [
            arg_deviceId,
            arg_endpointId,
          ],
        ),
        returnValue: _i3.Future<int?>.value(),
        returnValueForMissingStub: _i3.Future<int?>.value(),
      ) as _i3.Future<int?>);
  @override
  _i3.Future<int?> readTolerance(
    int? arg_deviceId,
    int? arg_endpointId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #readTolerance,
          [
            arg_deviceId,
            arg_endpointId,
          ],
        ),
        returnValue: _i3.Future<int?>.value(),
        returnValueForMissingStub: _i3.Future<int?>.value(),
      ) as _i3.Future<int?>);
}
